name: Deploy to EC2

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Start ssh-agent and add EC2 private key
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      # Deploy to EC2
      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            set -e

            echo "==> Updating system..."
            sudo dnf update -y

            echo "==> Installing Docker..."
            sudo dnf install -y docker

            echo "==> Enabling Docker service..."
            sudo systemctl enable docker
            sudo systemctl start docker

            echo "==> Installing Docker Compose v2..."
            DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
            mkdir -p $DOCKER_CONFIG/cli-plugins
            curl -SL https://github.com/docker/compose/releases/download/v2.29.7/docker-compose-linux-x86_64 \
              -o $DOCKER_CONFIG/cli-plugins/docker-compose
            chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose

            echo "==> Docker Compose version:"
            docker compose version
          EOF

      # Sync project files from GitHub runner to EC2
      - name: Rsync project files
        run: |
          rsync -avz --delete \
            -e "ssh -o StrictHostKeyChecking=no" \
            ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:~/project

      # Start containers using new docker compose
      - name: Start containers on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd ~/project
            echo "==> Stopping old containers..."
            docker compose down || true

            echo "==> Starting new containers..."
            docker compose up -d --build
          EOF
